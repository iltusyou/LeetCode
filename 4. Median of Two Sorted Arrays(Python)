class Solution:                
    def findMedianSortedArrays(self, nums1, nums2):
        self.nums=[];
        self.nums.append(nums1);
        self.nums.append(nums2);
        self.result=0;
        
                
        count=0;
        while len(self.nums[0])>0 or len(self.nums[1])>0:
            if(count%2==0):
            	self.result = self.getMin();                                
            else:    
            	self.result = (self.result + self.getMax())/2.0;
            count+=1;
            
        return self.result;
    
    def getMin(self):
        if(len(self.nums[0])==0):
            return self.handleMinArray(1);
        if(len(self.nums[1])==0):
            return self.handleMinArray(0);        
        
        min0 = self.nums[0][0];
        min1 = self.nums[1][0];
        if min0<=min1:
            return self.handleMinArray(0);   
        else:
        	return self.handleMinArray(1);   
                                    
    def handleMinArray(self, i):
        t = self.nums[i][0];
        del self.nums[i][0];
        return t;
    
    
    def getMax(self):
        if(len(self.nums[0])==0):
            return self.handleMaxArray(1);
        if(len(self.nums[1])==0):
            return self.handleMaxArray(0);        
        
        max0 = self.nums[0][-1];
        max1 = self.nums[1][-1];
        if max0>=max1:
            return self.handleMaxArray(0);   
        else:
        	return self.handleMaxArray(1);   
                                    
    def handleMaxArray(self, i):
        t = self.nums[i][-1];
        del self.nums[i][-1];
        return t;
